<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="quiz.css">
</head>
<body>
    <center>
     <div class="container">
        <h1>TIC TAC TOE</h1>
        <p>Game starts by just Top on box</p>
        <p>First Player starts as <span><b>Player x</b></span></p>
        <p>And</p>
        <p>Second Player as <span><b>Player o</b></span></p>
        <div id="containerCell">
            <div cellIndex="0" class="cell"></div>
            <div cellIndex="1" class="cell"></div>
            <div cellIndex="2" class="cell"></div>
            <div cellIndex="3" class="cell"></div>
            <div cellIndex="4" class="cell"></div>
            <div cellIndex="5" class="cell"></div>
            <div cellIndex="6" class="cell"></div>
            <div cellIndex="7" class="cell"></div>
            <div cellIndex="8" class="cell"></div>
        </div>
        <br>
        <button id="restartBtn">RESET</button>
        <h2 id="statusText"></h2>
    </center>
     </div> 
</body>
<script src="quiz.js"></script>
</html>
.cell{
    width: 70px;
    height: 40px;
    border:1px solid rgb(107, 103, 103);
    margin: auto;
    background: rgb(243, 230, 230);
    font-size: 30px;
    border-radius: 5px;
    font-size: 30px;
    font-family: 'poppins',sans-serif;
    margin-top: 15px;
    margin: 3px;
   
}

.container h1{
    color: red;
    font-family: 'Poppins',sans-serif;
    font-weight: 600i;

}
#statusText{
    font-family: 'poppins';
}
p{
    font-family: 'poppins',sans-serif;
    color: rgb(19, 59, 241);
    font-size: 20px;
}
span{
    color: rgba(17, 76, 238, 0.945);
}

#containerCell{
    display: grid;
    grid-template-columns: repeat(3,auto);
    width: 200px;
   
    border: none;
}

#restartBtn{
    background: rgb(38, 124, 236);
    font-family: 'poppins',sans-serif;
    border-radius: 5px;
    padding: 10px;
    color: #fff;
    border: none;
    width: 90px;
}

h2{
    color:blue;
}
h1{
    color: red;
}
const cells=document.querySelectorAll(".cell");
const statusText=document.querySelector("#statusText");
const restartBtn=document.querySelector("#restartBtn");

const winConditions=[
    [0,1,2],
    [3,4,5],
    [6,7,8],
    [0,3,6],
    [1,4,7],
    [2,5,8],
    [0,4,8],
    [2,4,6]
];
let options=["","","","","","","","","",];
let currentPlayer="x";
let running=false;

initializer();

function initializer(){
cells.forEach(cell=>cell.addEventListener("click",clickCell));
restartBtn.addEventListener("click",restartGame);
statusText.textContent=`${currentPlayer}'s turn`;
running=true;
}
function clickCell(){
    const cellIndex= this.getAttribute("cellIndex");
    if(options[cellIndex] != "" || !running){
        return;
    }
updateCell(this,cellIndex);

checkWinner();
} 

function updateCell(cell,index){
    options[index]=currentPlayer;
    cell.textContent=currentPlayer;
 }
function changePlayer(){
currentPlayer=(currentPlayer == "x") ? "0" :"x";
statusText.textContent`${currentPlayer}'s turn`;
}


function checkWinner(){
    let win=false;
    for(let i=0;i<winConditions.length;i++){
        const condition=winConditions[i];
        const cellA=options[condition[0]];
        const cellB=options[condition[1]];
        const cellC=options[condition[2]];
        if(cellA=="" || cellB=="" || cellC==""){
            continue;
        }
     if(cellA==cellB && cellB==cellC){
        win=true;
        break;
     }
    }
    if(win){
        statusText.textContent=`player ${currentPlayer}won`;
         running=false;  
    }
    else if(!options.includes("")){
        statusText.textContent='DRAW';
        running=false;

    }
    else{
        changePlayer();
    }
}

function restartGame(){
    currentPlayer="x";
    let options=["","","","","","","","","",];
    statusText.textContent=`${currentPlayer} 's turn`;
    cells.forEach(cell=>cell.textContent="");
    running=true;
}
